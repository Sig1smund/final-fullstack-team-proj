{"version":3,"file":"static/js/582.4e1e5468.chunk.js","mappings":"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","sources":["webpack://final-fullstack-team-proj/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://final-fullstack-team-proj/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"RegisterForm_formTitle__YlpKI\",\"formLabelConteiner\":\"RegisterForm_formLabelConteiner__IcVDC\",\"formLabelPasswordConteiner\":\"RegisterForm_formLabelPasswordConteiner__Nxwlt\",\"showPasswordButton\":\"RegisterForm_showPasswordButton__jrdkw\",\"passwordIcon\":\"RegisterForm_passwordIcon__1O5tr\",\"formInput\":\"RegisterForm_formInput__Rum0L\",\"error\":\"RegisterForm_error__yDHjz\",\"success\":\"RegisterForm_success__4UeKG\",\"authBtn\":\"RegisterForm_authBtn__W+wnc global_desktopLoginButton__z9H8G\",\"errorsMassage\":\"RegisterForm_errorsMassage__2oCbs\",\"authScreenNavigation\":\"RegisterForm_authScreenNavigation__XO+RA\",\"authScreenNavigationLink\":\"RegisterForm_authScreenNavigationLink__jg-0O\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { register } from '../../redux/auth/operations';\nimport * as yup from 'yup'; \nimport sprite from '../../images/sprite.svg';\nimport styles from './RegisterForm.module.css';\n\nconst RegisterForm = () => {\n    const [showPassword1, setShowPassword1] = useState(false);\n    const [showPassword2, setShowPassword2] = useState(false);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [password2, setPassword2] = useState('');\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const registerSchema = yup.object().shape({\n        email: yup.string().email('Invalid email').required('Email is required'),\n        password: yup.string().required('Password is required'),\n        password2: yup.string().oneOf([yup.ref('password'), null], \"Passwords don't match\"),\n    });\n\n   \n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const data = { name: name, email: email, password: password };\n        registerSchema.validate(data, { abortEarly: false })\n            .then(() => {\n                console.log(data)\n                dispatch(register(data))\n                    .then(response => {\n                        setEmail('');\n                        setPassword('');\n                        setPassword2('');\n                    })\n                    .catch(error => {\n                        console.error(error.message);\n                    });\n            })\n            .catch(validationErrors => {\n                const newErrors = {};\n                validationErrors.inner.forEach(err => {\n                    newErrors[err.path] = err.message;\n                });\n                setErrors(newErrors);\n            });\n    };\n\n    return (\n        <div>\n            <h2 className={styles.formTitle}>Registration</h2>\n            <form onSubmit={onSubmit}>\n                <div className={styles.formLabelConteiner}>\n                    <label className={styles.formLabel}>\n                        <input\n                            className={`${styles.formInput}`}\n                            placeholder=\"Name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            type=\"text\"\n                        />\n                        {/* {errors.email && <p className={styles.errorsMassage}>{errors.email}</p>} */}\n                    </label>\n                    <label className={styles.formLabel}>\n                        <input\n                            className={`${styles.formInput} ${errors.email ? styles.error : ''}`}\n                            placeholder=\"Email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            type=\"email\"\n                        />\n                        {errors.email && <p className={styles.errorsMassage}>{errors.email}</p>}\n                    </label>\n                    <label className={styles.formLabel}>\n                        <div className={styles.formLabelPasswordConteiner}>\n                            <input\n                                className={`${styles.formInput} ${errors.password ? styles.error : ''}`}\n                                placeholder=\"Password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                type={showPassword1 ? 'text' : 'password'}\n                            />\n                            <button\n                                className={styles.showPasswordButton}\n                                type=\"button\"\n                                onClick={() => setShowPassword1(!showPassword1)}\n                            >\n                                {showPassword1 ? (\n                                    <svg className={styles.passwordIcon}>\n                                        <use href={`${sprite}#eye-closed`} />\n                                    </svg>\n                                ) : (\n                                    <svg className={styles.passwordIcon}>\n                                        <use href={`${sprite}#eye-open`} />\n                                    </svg>\n                                )}\n                            </button>\n                        </div>\n                        {errors.password1 && <p className={styles.errorsMassage}>{errors.password1}</p>}\n                    </label>\n                    <label className={styles.formLabel}>\n                        <div className={styles.formLabelPasswordConteiner}>\n                            <input\n                                className={`${styles.formInput} ${errors.password2 ? styles.error : ''}`}\n                                placeholder=\"Confirm password\"\n                                value={password2}\n                                onChange={(e) => setPassword2(e.target.value)}\n                                type={showPassword2 ? 'text' : 'password'}\n                            />\n                            <button\n                                className={styles.showPasswordButton}\n                                type=\"button\"\n                                onClick={() => setShowPassword2(!showPassword2)}\n                            >\n                                {showPassword2 ? (\n                                    <svg className={styles.passwordIcon}>\n                                        <use href={`${sprite}#eye-closed`} />\n                                    </svg>\n                                ) : (\n                                    <svg className={styles.passwordIcon}>\n                                        <use href={`${sprite}#eye-open`} />\n                                    </svg>\n                                )}\n                            </button>\n                        </div>\n                        {errors.password2 && <p className={styles.errorsMassage}>{errors.password2}</p>}\n                    </label>\n                </div>\n                <button className={styles.authBtn} type=\"submit\">\n                    Registration\n                </button>\n                <p className={styles.authScreenNavigation}>\n                    Already have an account?&nbsp;\n                    <NavLink to=\"/api/users/login\" className={styles.authScreenNavigationLink}>\n                        Login\n                    </NavLink>\n                </p>\n            </form>\n        </div>\n    );\n};\n\nexport default RegisterForm;","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"RegisterPage_formContainer__pZjkV\"};","import React from 'react';\nimport RegisterForm from 'components/RegisterForm';\n\nimport styles from './RegisterPage.module.css';\n\nconst RegisterPage = () => {\n    return (\n        <div> \n            <div className={styles.formContainer}>\n                <RegisterForm />\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterPage;"],"names":["_useState","useState","_useState2","_slicedToArray","showPassword1","setShowPassword1","_useState3","_useState4","showPassword2","setShowPassword2","_useState5","_useState6","name","setName","_useState7","_useState8","email","setEmail","_useState9","_useState10","password","setPassword","_useState11","_useState12","password2","setPassword2","_useState13","_useState14","errors","setErrors","dispatch","useDispatch","registerSchema","yup","shape","required","oneOf","_jsxs","children","_jsx","className","styles","onSubmit","e","preventDefault","data","validate","abortEarly","then","console","log","register","response","catch","error","message","validationErrors","newErrors","inner","forEach","err","path","concat","placeholder","value","onChange","target","type","onClick","href","sprite","password1","NavLink","to","RegisterForm"],"sourceRoot":""}