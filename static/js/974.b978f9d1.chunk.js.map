{"version":3,"file":"static/js/974.b978f9d1.chunk.js","mappings":"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","sources":["webpack://final-fullstack-team-proj/./src/components/AddPetForm/AddPetForm.module.css?e77b","components/AddPetForm/AddPetForm.jsx","webpack://final-fullstack-team-proj/./src/pages/AddPetPage/AddPetPage.module.css?a97e","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_radio\":\"AddPetForm_form_radio__-9VOx\",\"form_radio_btn_input\":\"AddPetForm_form_radio_btn_input__kJhXX\",\"button\":\"AddPetForm_button__09gyV global_lostAndFoundButton__5arGq\",\"active\":\"AddPetForm_active__yUgp-\",\"image\":\"AddPetForm_image__7TFnS\",\"image_title\":\"AddPetForm_image_title__L826S\",\"backLink\":\"AddPetForm_backLink__nhnb4\",\"logo\":\"AddPetForm_logo__Vl6Jb\",\"image_button\":\"AddPetForm_image_button__K83Kb\",\"sex_thumb\":\"AddPetForm_sex_thumb__My81l\",\"sex_section\":\"AddPetForm_sex_section__LzgpP\",\"sex_male\":\"AddPetForm_sex_male__L4Gt3\",\"sex_female\":\"AddPetForm_sex_female__j0Ug4\",\"male_icon\":\"AddPetForm_male_icon__jjTZR\",\"female_icon\":\"AddPetForm_female_icon__XoCRX\",\"sex_active\":\"AddPetForm_sex_active__e0oHu\",\"img_thumb\":\"AddPetForm_img_thumb__Upwcx\"};","import {\n  FormikStepper,\n  FormikStep,\n  InputField,\n  // RadioField,\n} from 'formik-stepper';\nimport { toast } from \"react-toastify\";\nimport * as Yup from 'yup';\nimport { addNotice } from 'redux/notices/operations';\nimport { createPet } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useRef, useState } from 'react';\nimport {  useNavigate } from 'react-router-dom';\n// import \"formik-stepper/dist/style.css\";\n// import React, { useCallback } from 'react';\n// import { IoArrowBackCircleSharp } from 'react-icons/io5';\nimport './AddPetForm.css';\nimport css from './AddPetForm.module.css';\nimport icon from '../../images/sprite.svg';\nimport DefaultImage from '../../images/default_image.png';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Enter a name'),\n  // date: Yup.date().required('Required').format('DD-MM-YYYY', true),\n  // eslint-disable-next-line\n  date: Yup.string().matches(/^(0[1-9]|[12][0-9]|3[01])\\-(0[1-9]|1[0-2])\\-\\d{4}$/, \"Incorrect date format\").required(),\n  type: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Enter a type'),\n  // title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!').required('Enter a type name pet'),\n  title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!'),\n  location: Yup.string(),\n  // location: Yup.string().required('Enter a location'),\n  price: Yup.number().integer().min(1),\n  // price: Yup.number().integer().min(1).required('Enter the price'),\n  comments: Yup.string().max(120, 'Too Long!'),\n});\n\nconst initialValues = {\n  //Personal details\n  category: '',\n  name: '',\n  date: '',\n  type: '',\n  title: 'title',\n  //  More info\n  sex: 'male',\n  location: 'city',\n  price: 1,\n  comments: '',\n  // isYourPet: true,\n};\n\nexport default function AddPetForm() {\n  const dispatch = useDispatch();\n\n  // const [state, setState] = useState(initialValues);\n  const [category, setCategory] = useState('sell');\n  const [sex, setSex] = useState('male');\n  const [imageURL, setImageURL] = useState('');\n  const [imageFile, setFile] = useState('');\n\n  const inputPhotoRef = useRef();\n  // const location = useLocation();\n  // const backLink = useRef(location.state?.from ?? '/');\n  const navigate = useNavigate();\n\n \n\n  const onChangeCategory = e => {\n    setCategory(e.target.value);\n  };\n  const onChangeSex = e => {\n    setSex(e.target.value);\n  };\n\n  const onChangeFile = event => {\n    const file = event.target.files[0];\n    if (file.size > 1024 * 1024 * 3) {\n      alert('Wrong size');\n      return;\n    }\n    const newImage = URL.createObjectURL(file);\n    setImageURL(newImage);\n    setFile(file);\n    console.log('file', file);\n    console.log('newImage', newImage);\n  };\n\n  const onLoadNewPhoto = () => {\n    inputPhotoRef.current.click();\n  };\n\n  const onSubmit = values => {\n    console.log('values', values);\n\n    const { name, date, type, title, location, price, comments = '' } = values;\n\n    if (!sex) {\n      throw toast(\"Please, choose male or female \");\n    };\n\n    const formData = new FormData();\n\n    if (category === 'your-pet') {\n      // add pet\n      formData.append('name', name);\n      formData.append('date', date);\n      formData.append('type', type);\n      formData.append('comments', comments);\n      formData.append('image', imageFile);\n\n      dispatch(createPet(formData));\n    } else {\n      // add notice\n      formData.append('name', name);\n      formData.append('category', category);\n      formData.append('date', date);\n      formData.append('type', type);\n      formData.append('title', title);\n      formData.append('location', location);\n      formData.append('sex', sex);\n      formData.append('price', price);\n      formData.append('comments', comments);\n      formData.append('image', imageFile);\n\n      dispatch(addNotice(formData));\n    }\n    if (category === 'your-pet') {\n      navigate(`/user`);\n    } else {\n      navigate(`/notices`);\n    }\n  };\n\n  return (\n    <FormikStepper\n      /// Accept all Formik props\n      onSubmit={onSubmit} /// onSubmit Function\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      withStepperLine /// false as default and If it is false, it hides stepper line\n      nextButton={{\n        label: 'Next',\n        style: { backgroundColor: 'var(--blue-color)' },\n      }}\n\n      prevButton={{\n        label: 'Back',\n        style: { color: '#54ADFF', background: 'transparent' },\n      }}\n      submitButton={{\n        label: 'Done',\n        style: { backgroundColor: 'var(--blue-color)' },\n      }}\n    >\n      {/*  First Step */}\n      <FormikStep\n        label=\"Choose option\" /// The text label of Step\n        labelColor=\"#00C3AD\"\n        circleColor=\"#00C3AD\"\n      >\n        <div className={css.form_radio}>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"your-pet\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"your-pet\"\n              onChange={onChangeCategory}\n              checked={category === 'your-pet' ? true : false}\n            ></input>\n            <label\n              className={\n                category === 'your-pet'\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"your-pet\"\n            >\n              your pet\n            </label>\n          </div>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"sell\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"sell\"\n              onChange={onChangeCategory}\n              checked={category === 'sell' ? true : false}\n            ></input>\n            <label\n              className={\n                category === 'sell'\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"sell\"\n            >\n              sell\n            </label>\n          </div>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"lost-found\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"lost-found\"\n              onChange={onChangeCategory}\n              checked={category === 'lost-found' ? true : false}\n            ></input>\n            <label\n              className={\n                category === 'lost-found'\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"lost-found\"\n            >\n              lost/found\n            </label>\n          </div>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"in-good-hands\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"in-good-hands\"\n              onChange={onChangeCategory}\n              checked={category === 'in-good-hands' ? true : false}\n            ></input>\n            <label\n              className={\n                category === 'in-good-hands'\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"in-good-hands\"\n            >\n              in good hands\n            </label>\n          </div>\n        </div>\n\n       {/*<Link className={css.backLink} to={backLink.current}>\n         <svg className={css.logo} width=\"24\" height=\"24\">\n           <use href={icon + '#arrow-left-1'}></use>\n         </svg>\n         Сancel\n        </Link>*/}\n\n         <button  type=\"button\" className={css.backLink} onClick={()=>navigate(-1)}>\n       <svg className={css.logo} width=\"24\" height=\"24\">\n           <use href={icon + '#arrow-left-1'}></use>\n         </svg>\n         Сancel\n        </button>\n\n      </FormikStep>\n      {/* Second Step */}\n      <FormikStep label=\"Personal details\" circleColor=\"#54ADFF\">\n        {!(category === 'your-pet') && (\n          <InputField\n            name=\"title\"\n            label=\"Title of add\"\n            placeholder=\"Type name pet\"\n            type=\"text\"\n          />\n        )}\n\n        <InputField\n          name=\"name\"\n          label=\"Pet’s name\"\n          type=\"text\"\n          placeholder=\"Type name pet\"\n        />\n        <InputField\n          name=\"date\"\n          label=\"Date of birth\"\n          placeholder=\"Type date of birth\"\n          type=\"text\"\n        />\n        <InputField\n          name=\"type\"\n          label=\"Type\"\n          placeholder=\"Type of pet\"\n          type=\"text\"\n        />\n      </FormikStep>\n      {/* Third Step */}\n      <FormikStep label=\"More info\" circleColor=\"#CCE4FB\">\n        {!(category === 'your-pet') && (\n          // <div className={css.sex_thumb}>\n          <>\n            <h3>The sex</h3>\n            <div className={css.sex_thumb}>\n              <div className={css.sex_section}>\n                <input\n                  className={css.form_radio_btn_input}\n                  id=\"female\"\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"female\"\n                  onChange={onChangeSex}\n                  checked={sex === 'female' ? true : false}\n                ></input>\n                <label\n                  className={\n                    sex === 'female'\n                      ? [css.sex_female, css.sex_active].join(' ')\n                      : css.sex_female\n                  }\n                  htmlFor=\"female\"\n                >\n                  <svg className={css.female_icon} width=\"24\" height=\"24\">\n                    <use href={icon + '#female-1'}></use>\n                  </svg>\n                  Female\n                </label>\n              </div>\n              <div className={css.sex_section}>\n                <input\n                  className={css.form_radio_btn_input}\n                  id=\"male\"\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"male\"\n                  onChange={onChangeSex}\n                  checked={sex === 'male' ? true : false}\n                ></input>\n                <label\n                  className={\n                    sex === 'male'\n                      ? [css.sex_male, css.sex_active].join(' ')\n                      : css.sex_male\n                  }\n                  htmlFor=\"male\"\n                >\n                  <svg className={css.male_icon} width=\"24\" height=\"24\">\n                    <use href={icon + '#male-1'}></use>\n                  </svg>\n                  Male\n                </label>\n              </div>\n            </div>\n          </>\n\n          // </div>\n        )}\n\n        {/* Image */}\n        <div className={css.img_thumb}>\n          <p className={css.image_title}>Load the pet’s image:</p>\n          <button\n            type=\"button\"\n            className={css.image_button}\n            onClick={onLoadNewPhoto}\n          >\n            {imageURL ? (\n              <img src={imageURL} className={css.image} alt=\"pet\" />\n            ) : (\n              <img src={DefaultImage} className={css.image} alt=\"pet\" />\n            )}\n          </button>\n\n          <input\n            type=\"file\"\n            accept=\"image/*, .png, .jpg, .gif, .web\"\n            ref={inputPhotoRef}\n            onChange={onChangeFile}\n            style={{ display: 'none' }}\n          />\n        </div>\n\n        {!(category === 'your-pet') && (\n          <>\n            <InputField\n              name=\"location\"\n              label=\"Location\"\n              placeholder=\"Type of location\"\n              type=\"text\"\n            />\n\n            {category === 'sell' && (\n              <InputField\n                name=\"price\"\n                label=\"Price\"\n                placeholder=\"Type of price\"\n                type=\"text\"\n              />\n            )}\n          </>\n        )}\n        <InputField\n          name=\"comments\"\n          label=\"Comments\"\n          placeholder=\"Type of pet\"\n          type=\"text\"\n        />\n      </FormikStep>\n    </FormikStepper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"AddPetPage_formContainer__3H5vK\",\"title\":\"AddPetPage_title__Vaz3d\"};","import AddPetForm from 'components/AddPetForm';\n\nimport styles from './AddPetPage.module.css';\n\nexport default function AddPetPage() {\n\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.title}>Add pet</h2>\n      <AddPetForm />\n     </div>\n  );\n}\n"],"names":["validationSchema","Yup","shape","name","min","max","required","date","matches","type","title","location","price","integer","comments","initialValues","category","sex","AddPetForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setCategory","_useState3","_useState4","setSex","_useState5","_useState6","imageURL","setImageURL","_useState7","_useState8","imageFile","setFile","inputPhotoRef","useRef","navigate","useNavigate","onChangeCategory","e","target","value","onChangeSex","_jsxs","FormikStepper","onSubmit","values","console","log","_values$comments","toast","formData","FormData","append","createPet","addNotice","withStepperLine","nextButton","label","style","backgroundColor","prevButton","color","background","submitButton","children","FormikStep","labelColor","circleColor","className","css","_jsx","id","onChange","checked","join","htmlFor","onClick","width","height","href","icon","InputField","placeholder","_Fragment","current","click","src","alt","DefaultImage","accept","ref","event","file","files","size","alert","newImage","URL","createObjectURL","display","AddPetPage","styles"],"sourceRoot":""}