{"version":3,"file":"static/js/974.3e65e6a6.chunk.js","mappings":"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","sources":["webpack://final-fullstack-team-proj/./src/components/AddPetForm/AddPetForm.module.css?e77b","components/AddPetForm/AddPetForm.jsx","webpack://final-fullstack-team-proj/./src/pages/AddPetPage/AddPetPage.module.css?a97e","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_radio\":\"AddPetForm_form_radio__-9VOx\",\"form_radio_btn_input\":\"AddPetForm_form_radio_btn_input__kJhXX\",\"form_radio_btn_label\":\"AddPetForm_form_radio_btn_label__wMZMz\",\"form_radio_btn\":\"AddPetForm_form_radio_btn__hilI2\",\"button\":\"AddPetForm_button__09gyV global_lostAndFoundButton__5arGq\",\"active\":\"AddPetForm_active__yUgp-\",\"backLink\":\"AddPetForm_backLink__nhnb4\",\"logo\":\"AddPetForm_logo__Vl6Jb\",\"image\":\"AddPetForm_image__7TFnS\",\"image_title\":\"AddPetForm_image_title__L826S\"};","import {\n  FormikStepper,\n  FormikStep,\n  InputField,\n  RadioField,\n} from 'formik-stepper';\nimport * as Yup from 'yup';\nimport { addNotice } from 'redux/notices/operations';\nimport { createPet } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useRef, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\n\n// import \"formik-stepper/dist/style.css\";\n\n// import { IoArrowBackCircleSharp } from 'react-icons/io5';\nimport './AddPetForm.css';\nimport css from './AddPetForm.module.css';\nimport icon from '../../images/sprite.svg';\nimport DefaultImage from '../../images/default_image.png';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Enter a name'),\n  // date: Yup.date().required('Required').format('DD-MM-YYYY', true),\n  date: Yup.date()\n    .typeError('The value must be a date (DD-MM-YYYY)')\n    .required('Enter a date of birth'),\n  type: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Enter a type'),\n  // title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!').required('Enter a type name pet'),\n  title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!'),\n  location: Yup.string(),\n  // location: Yup.string().required('Enter a location'),\n  price: Yup.number().integer().min(1),\n  // price: Yup.number().integer().min(1).required('Enter the price'),\n  comments: Yup.string().max(120, 'Too Long!'),\n});\n\n// const initialState = {\n//   category: \"\",\n//   file: null,\n\n// };\n\nconst initialValues = {\n  //Personal details\n  category: '',\n  name: '',\n  date: '',\n  type: '',\n  title: 'title',\n  //  More info\n  sex: 'male',\n  location: 'city',\n  price: 1,\n  comments: '',\n  // isYourPet: true,\n};\n\nexport default function AddPetForm() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  // const [state, setState] = useState(initialValues);\n  const [category, setCategory] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const [imageFile, setFile] = useState('');\n  // const [value, setValue] = useState(\"your-own\");\n\n  // const inputPhotoRef = useRef();\n\n  const onChange = e => {\n    // const { name, value } = e.target;\n    // const isYourPet = (value === \"your-pet\");\n    // console.log('e', e.target);\n    // setState(state => ({ ...state, [name]: value }));\n    setCategory(e.target.value);\n    // setValue(e.target.value);\n\n    // console.log(name, value);\n    // console.log('category', state.category);\n    // console.log('dds', imageURL);\n  };\n\n  const onChangeFile = event => {\n    const file = event.target.files[0];\n    if (file.size > 1024 * 1024 * 3) {\n      alert('Wrong size');\n      return;\n    }\n    const newImage = URL.createObjectURL(file);\n    setImageURL(newImage);\n    setFile(file);\n    console.log('file', file);\n    console.log('newImage', newImage);\n  };\n\n  //   const onLoadNewPhoto = () => {\n  //   inputPhotoRef.current.click();\n  // };\n\n  const onSubmit = values => {\n    console.log('values', values);\n    // setState(state => ({ ...state, ...values }));\n    // console.log('state', state);\n\n    const {\n      name,\n      date,\n      type,\n      title,\n      location,\n      sex,\n      price,\n      comments = '',\n    } = values;\n\n    const formData = new FormData();\n\n    if (category === 'your-pet') {\n      // add pet\n      formData.append('name', name);\n      // formData.append(\"category\", category);\n      formData.append('date', date);\n      formData.append('type', type);\n      // formData.append(\"title\", title);\n      // formData.append(\"location\", location);\n      // formData.append(\"sex\", sex);\n      // formData.append(\"price\", price);\n      formData.append('comments', comments);\n      formData.append('image', imageFile);\n\n      dispatch(createPet(formData));\n    } else {\n      // add notice\n      formData.append('name', name);\n      formData.append('category', category);\n      formData.append('date', date);\n      formData.append('type', type);\n      formData.append('title', title);\n      formData.append('location', location);\n      formData.append('sex', sex);\n      formData.append('price', price);\n      formData.append('comments', comments);\n      formData.append('image', imageFile);\n\n      dispatch(addNotice(formData));\n    }\n  };\n\n  // const { category } = state;\n  // console.log(\"isYourPet\", isYourPet);\n  return (\n    <FormikStepper\n      /// Accept all Formik props\n      onSubmit={onSubmit} /// onSubmit Function\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      withStepperLine /// false as default and If it is false, it hides stepper line\n      nextButton={{ label: 'Next' }}\n      prevButton={{\n        label: 'Back',\n        style: { color: '#54ADFF', background: 'transparent' },\n      }}\n      submitButton={{ label: 'Done' }}\n    >\n      {/*  First Step */}\n      <FormikStep\n        label=\"Choose option\" /// The text label of Step\n        labelColor=\"#00C3AD\"\n        circleColor=\"#00C3AD\"\n      >\n        <div className={css.form_radio}>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"your-pet\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"your-pet\"\n              onChange={onChange}\n              checked={category===\"your-pet\"? true: false}\n            ></input>\n            <label\n              className={\n                category === 'your-pet'\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"your-pet\"\n            >\n              your pet\n            </label>\n          </div>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"sell\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"sell\"\n              onChange={onChange}\n              checked={category===\"sell\"? true: false}\n            ></input>\n            <label\n              className={\n                category===\"sell\"? true: false\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"sell\"\n            >\n              sell\n            </label>\n          </div>\n          <div className=\"form_radio_btn\">\n            <input\n              className={css.form_radio_btn_input}\n              id=\"lost-found\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"lost-found\"\n              onChange={onChange}\n              checked={category===\"lost-found\"? true: false}\n            ></input>\n            <label\n              className={\n                category===\"lost-found\"? true: false\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"lost-found\"\n            >\n              lost/found\n            </label>\n          </div>\n          <div className=\"form_radio_btn\">\n            <input\n              className={css.form_radio_btn_input}\n              id=\"in-good-hands\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"in-good-hands\"\n              onChange={onChange}\n              checked={category===\"in-good-hands\"? true: false}\n            ></input>\n            <label\n              className={\n                category===\"in-good-hands\"? true: false\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"in-good-hands\"\n            >\n              in good hands\n            </label>\n          </div>\n        </div>\n\n        {/* <RadioField\n          name=\"category\"\n          label=\"category\"\n          labelColor=\"#000\"\n          options={[\n            { label: 'your pet', value: 'your-pet' },\n            { label: 'sell', value: 'sell' },\n            { label: 'lost-found', value: 'lost-found' },\n            { label: 'in good hands', value: 'in-good-hands' },\n          ]}\n        /> */}\n\n        {/* /> */}\n        <Link className={css.backLink} to={backLink.current}>\n          {/* <IoArrowBackCircleSharp\n          style={{ marginRight: 8, width: '20', height: '20' }}\n        /> */}\n          <svg className={css.logo} width=\"24\" height=\"24\">\n            {/* <use href={icon + '#arrow-left'}></use> */}\n            <use href={icon + '#pawprint-1'}></use>\n          </svg>\n          Go back\n        </Link>\n      </FormikStep>\n      {/* Second Step */}\n      <FormikStep label=\"Personal details\" circleColor=\"#54ADFF\">\n        {!(category === 'your-pet') && (\n          <InputField\n            name=\"title\"\n            label=\"Title of add\"\n            placeholder=\"Type name pet\"\n            type=\"text\"\n          />\n        )}\n\n        <InputField\n          name=\"name\"\n          label=\"Pet’s name\"\n          type=\"text\"\n          placeholder=\"Type name pet\"\n        />\n        <InputField\n          name=\"date\"\n          label=\"Date of birth\"\n          placeholder=\"Type date of birth\"\n          type=\"text\"\n        />\n        <InputField\n          name=\"type\"\n          label=\"Type\"\n          placeholder=\"Type of pet\"\n          type=\"text\"\n        />\n      </FormikStep>\n      {/* Third Step */}\n      <FormikStep label=\"More info\" circleColor=\"#CCE4FB\">\n        {/* Image */}\n        <div>\n          <p className={css.image_title}>Load the pet’s image:</p>\n\n          {imageURL ? (\n            <img\n              src={imageURL}\n              className={css.image}\n              alt=\"pet\"\n              // onClick={onLoadNewPhoto}\n            />\n          ) : (\n            <img\n              src={DefaultImage}\n              className={css.image}\n              alt=\"pet\"\n              // onClick={onLoadNewPhoto}\n            />\n          )}\n\n          <input\n            type=\"file\"\n            accept=\"image/*, .png, .jpg, .gif, .web\"\n            // ref={inputPhotoRef}\n\n            onChange={onChangeFile}\n\n            // style={{ display: 'none' }}\n          />\n        </div>\n\n        {/* for caterory = your pet */}\n        {!(category === 'your-pet') && (\n          <>\n            <RadioField\n              name=\"sex\"\n              labelColor=\"#000\"\n              options={[\n                { label: 'Female', value: 'female' },\n                { label: 'Male', value: 'male' },\n              ]}\n            />\n            <InputField\n              name=\"location\"\n              label=\"Location\"\n              placeholder=\"Type of location\"\n              type=\"text\"\n            />\n            {category === 'sell' && (\n              <InputField\n                name=\"price\"\n                label=\"Price\"\n                placeholder=\"Type of price\"\n                type=\"text\"\n              />\n            )}\n          </>\n        )}\n        <InputField\n          name=\"comments\"\n          label=\"Comments\"\n          placeholder=\"Type of pet\"\n          type=\"text\"\n        />\n      </FormikStep>\n    </FormikStepper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"AddPetPage_formContainer__3H5vK\",\"title\":\"AddPetPage_title__Vaz3d\"};","import AddPetForm from 'components/AddPetForm';\nimport styles from './AddPetPage.module.css';\n\nexport default function AddPetPage() {\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.title}>Add pet</h2>\n      <AddPetForm />\n    </div>\n  );\n}\n"],"names":["validationSchema","Yup","shape","name","min","max","required","date","typeError","type","title","location","price","integer","comments","initialValues","category","sex","AddPetForm","_location$state$from","_location$state","dispatch","useDispatch","useLocation","backLink","useRef","state","from","_useState","useState","_useState2","_slicedToArray","setCategory","_useState3","_useState4","imageURL","setImageURL","_useState5","_useState6","imageFile","setFile","onChange","e","target","value","_jsxs","FormikStepper","onSubmit","values","console","log","_values$comments","formData","FormData","append","createPet","addNotice","withStepperLine","nextButton","label","prevButton","style","color","background","submitButton","children","FormikStep","labelColor","circleColor","className","css","_jsx","id","checked","join","htmlFor","Link","to","current","width","height","href","icon","InputField","placeholder","src","alt","DefaultImage","accept","event","file","files","size","alert","newImage","URL","createObjectURL","_Fragment","RadioField","options","AddPetPage","styles"],"sourceRoot":""}