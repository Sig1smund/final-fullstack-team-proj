{"version":3,"file":"static/js/974.1dc7eb6f.chunk.js","mappings":"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","sources":["webpack://final-fullstack-team-proj/./src/components/AddPetForm/AddPetForm.module.css?e77b","components/AddPetForm/AddPetForm.jsx","webpack://final-fullstack-team-proj/./src/pages/AddPetPage/AddPetPage.module.css?a97e","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_radio\":\"AddPetForm_form_radio__-9VOx\",\"form_radio_btn_input\":\"AddPetForm_form_radio_btn_input__kJhXX\",\"button\":\"AddPetForm_button__09gyV global_lostAndFoundButton__5arGq\",\"active\":\"AddPetForm_active__yUgp-\",\"image\":\"AddPetForm_image__7TFnS\",\"image_title\":\"AddPetForm_image_title__L826S\",\"backLink\":\"AddPetForm_backLink__nhnb4\",\"logo\":\"AddPetForm_logo__Vl6Jb\",\"image_button\":\"AddPetForm_image_button__K83Kb\"};","import {\n  FormikStepper,\n  FormikStep,\n  InputField,\n  RadioField,\n} from 'formik-stepper';\nimport * as Yup from 'yup';\nimport { addNotice } from 'redux/notices/operations';\nimport { createPet } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useRef, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\n\n// import \"formik-stepper/dist/style.css\";\n\n// import { IoArrowBackCircleSharp } from 'react-icons/io5';\nimport './AddPetForm.css';\nimport css from './AddPetForm.module.css';\nimport icon from '../../images/sprite.svg';\nimport DefaultImage from '../../images/default_image.png';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Enter a name'),\n  // date: Yup.date().required('Required').format('DD-MM-YYYY', true),\n  date: Yup.date()\n    .typeError('The value must be a date (DD-MM-YYYY)')\n    .required('Enter a date of birth'),\n  type: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Enter a type'),\n  // title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!').required('Enter a type name pet'),\n  title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!'),\n  location: Yup.string(),\n  // location: Yup.string().required('Enter a location'),\n  price: Yup.number().integer().min(1),\n  // price: Yup.number().integer().min(1).required('Enter the price'),\n  comments: Yup.string().max(120, 'Too Long!'),\n});\n\n// const initialState = {\n//   category: \"\",\n//   file: null,\n\n// };\n\nconst initialValues = {\n  //Personal details\n  category: '',\n  name: '',\n  date: '',\n  type: '',\n  title: 'title',\n  //  More info\n  sex: 'male',\n  location: 'city',\n  price: 1,\n  comments: '',\n  // isYourPet: true,\n};\n\nexport default function AddPetForm() {\n  const dispatch = useDispatch();\n \n  // const [state, setState] = useState(initialValues);\n  const [category, setCategory] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const [imageFile, setFile] = useState('');\n\n  const inputPhotoRef = useRef();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  const onChange = e => {\n    // const { name, value } = e.target;\n    // const isYourPet = (value === \"your-pet\");\n    // console.log('e', e.target);\n    // setState(state => ({ ...state, [name]: value }));\n    setCategory(e.target.value);\n    // setValue(e.target.value);\n\n    // console.log(name, value);\n    // console.log('category', state.category);\n    // console.log('dds', imageURL);\n  };\n\n  const onChangeFile = event => {\n    const file = event.target.files[0];\n    if (file.size > 1024 * 1024 * 3) {\n      alert('Wrong size');\n      return;\n    }\n    const newImage = URL.createObjectURL(file);\n    setImageURL(newImage);\n    setFile(file);\n    console.log('file', file);\n    console.log('newImage', newImage);\n  };\n\n    const onLoadNewPhoto = () => {\n    inputPhotoRef.current.click();\n  };\n\n  const onSubmit = values => {\n    console.log('values', values);\n    // setState(state => ({ ...state, ...values }));\n    // console.log('state', state);\n\n    const {\n      name,\n      date,\n      type,\n      title,\n      location,\n      sex,\n      price,\n      comments = '',\n    } = values;\n\n    const formData = new FormData();\n\n    if (category === 'your-pet') {\n      // add pet\n      formData.append('name', name);\n      // formData.append(\"category\", category);\n      formData.append('date', date);\n      formData.append('type', type);\n      // formData.append(\"title\", title);\n      // formData.append(\"location\", location);\n      // formData.append(\"sex\", sex);\n      // formData.append(\"price\", price);\n      formData.append('comments', comments);\n      formData.append('image', imageFile);\n\n      dispatch(createPet(formData));\n    } else {\n      // add notice\n      formData.append('name', name);\n      formData.append('category', category);\n      formData.append('date', date);\n      formData.append('type', type);\n      formData.append('title', title);\n      formData.append('location', location);\n      formData.append('sex', sex);\n      formData.append('price', price);\n      formData.append('comments', comments);\n      formData.append('image', imageFile);\n\n      dispatch(addNotice(formData));\n    }\n  };\n\n  // const { category } = state;\n  // console.log(\"isYourPet\", isYourPet);\n  return (\n    <FormikStepper\n      /// Accept all Formik props\n      onSubmit={onSubmit} /// onSubmit Function\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      withStepperLine /// false as default and If it is false, it hides stepper line\n      nextButton={{\n        label: 'Next',\n        style: {backgroundColor: 'var(--blue-color)'}\n      }}\n      prevButton={{\n        label: 'Back',\n        style: { color: '#54ADFF', background: 'transparent' },\n      }}\n      submitButton={{ label: 'Done' }}\n    >\n      {/*  First Step */}\n      <FormikStep\n        label=\"Choose option\" /// The text label of Step\n        labelColor=\"#00C3AD\"\n        circleColor=\"#00C3AD\"\n      >\n        <div className={css.form_radio}>\n\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"your-pet\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"your-pet\"\n              onChange={onChange}\n              checked={category===\"your-pet\"? true: false}\n            ></input>\n            <label\n              className={\n                category === 'your-pet'\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"your-pet\"\n            >\n              your pet\n            </label>\n          </div>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"sell\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"sell\"\n              onChange={onChange}\n              checked={category===\"sell\"? true: false}\n            ></input>\n            <label\n              className={\n                category===\"sell\"\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"sell\"\n            >\n              sell\n            </label>\n           \n          </div>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"lost-found\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"lost-found\"\n              onChange={onChange}\n              checked={category===\"lost-found\"? true: false}\n            ></input>\n            <label\n              className={\n                category===\"lost-found\"\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"lost-found\"\n            >\n              lost/found\n            </label>\n          </div>\n          <div className={css.form_radio_btn}>\n            <input\n              className={css.form_radio_btn_input}\n              id=\"in-good-hands\"\n              type=\"radio\"\n              name=\"category\"\n              value=\"in-good-hands\"\n              onChange={onChange}\n              checked={category===\"in-good-hands\"? true: false}\n            ></input>\n            <label\n              className={\n                category===\"in-good-hands\"\n                  ? [css.button, css.active].join(' ')\n                  : css.button\n              }\n              htmlFor=\"in-good-hands\"\n            >\n              in good hands\n            </label>\n          </div>\n        </div>\n\n         <Link className={css.backLink} to={backLink.current}>\n            <svg className={css.logo} width=\"24\" height=\"24\">\n            <use href={icon + '#arrow-left'}></use> \n            {/* <use href={icon + '#pawprint-1'}></use> */}\n          \t{/* <path d=\"M5.333 16h21.333M5.333 16l8-8m-8 8 8 8\" /> */}\n          </svg>\n          Сancel\n        </Link>\n        \n      </FormikStep>\n      {/* Second Step */}\n      <FormikStep label=\"Personal details\" circleColor=\"#54ADFF\">\n        {!(category === 'your-pet') && (\n          <InputField\n            name=\"title\"\n            label=\"Title of add\"\n            placeholder=\"Type name pet\"\n            type=\"text\"\n          />\n        )}\n\n        <InputField\n          name=\"name\"\n          label=\"Pet’s name\"\n          type=\"text\"\n          placeholder=\"Type name pet\"\n        />\n        <InputField\n          name=\"date\"\n          label=\"Date of birth\"\n          placeholder=\"Type date of birth\"\n          type=\"text\"\n        />\n        <InputField\n          name=\"type\"\n          label=\"Type\"\n          placeholder=\"Type of pet\"\n          type=\"text\"\n        />\n      </FormikStep>\n      {/* Third Step */}\n      <FormikStep label=\"More info\" circleColor=\"#CCE4FB\">\n        {!(category === 'your-pet') &&\n          <RadioField\n            name=\"sex\"\n            labelColor=\"#000\"\n            options={[\n              { label: 'Female', value: 'female' },\n              { label: 'Male', value: 'male' },\n            ]}\n          />}\n        {/* Image */}\n        <div>\n          <p className={css.image_title}>Load the pet’s image:</p>\n          <button type='button'\n            className={css.image_button}\n          onClick={onLoadNewPhoto}> \n             {imageURL ? (           \n            <img\n              src={imageURL}\n              className={css.image}\n              alt=\"pet\"\n            />\n          ) : (\n            <img\n              src={DefaultImage}\n              className={css.image}\n              alt=\"pet\"\n            />\n          )} \n          </button>\n          \n\n          <input\n            type=\"file\"\n            accept=\"image/*, .png, .jpg, .gif, .web\"\n             ref={inputPhotoRef}\n            onChange={onChangeFile}\n            style={{ display: 'none' }}\n          />\n        </div>\n\n\n        {/* for caterory = your pet */}\n        {!(category === 'your-pet') && (\n          <>\n           \n            <InputField\n              name=\"location\"\n              label=\"Location\"\n              placeholder=\"Type of location\"\n              type=\"text\"\n            />\n            {category === 'sell' && (\n              <InputField\n                name=\"price\"\n                label=\"Price\"\n                placeholder=\"Type of price\"\n                type=\"text\"\n              />\n            )}\n          </>\n        )}\n        <InputField\n          name=\"comments\"\n          label=\"Comments\"\n          placeholder=\"Type of pet\"\n          type=\"text\"\n        />\n      </FormikStep>\n    </FormikStepper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"AddPetPage_formContainer__3H5vK\",\"title\":\"AddPetPage_title__Vaz3d\"};","import AddPetForm from 'components/AddPetForm';\n\nimport styles from './AddPetPage.module.css';\n\nexport default function AddPetPage() {\n\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.title}>Add pet</h2>\n      <AddPetForm />\n     </div>\n  );\n}\n"],"names":["validationSchema","Yup","shape","name","min","max","required","date","typeError","type","title","location","price","integer","comments","initialValues","category","sex","AddPetForm","_location$state$from","_location$state","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setCategory","_useState3","_useState4","imageURL","setImageURL","_useState5","_useState6","imageFile","setFile","inputPhotoRef","useRef","useLocation","backLink","state","from","onChange","e","target","value","_jsxs","FormikStepper","onSubmit","values","console","log","_values$comments","formData","FormData","append","createPet","addNotice","withStepperLine","nextButton","label","style","backgroundColor","prevButton","color","background","submitButton","children","FormikStep","labelColor","circleColor","className","css","_jsx","id","checked","join","htmlFor","Link","to","current","width","height","href","icon","InputField","placeholder","RadioField","options","onClick","click","src","alt","DefaultImage","accept","ref","event","file","files","size","alert","newImage","URL","createObjectURL","display","_Fragment","AddPetPage","styles"],"sourceRoot":""}