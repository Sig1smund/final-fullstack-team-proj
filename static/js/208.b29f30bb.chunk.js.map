{"version":3,"file":"static/js/208.b29f30bb.chunk.js","mappings":"wRA+BaA,IArBcC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kdAqBrBH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wR,UCb5BG,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,gBAEtEC,KAAMN,EAAAA,KAAWO,UAAU,yCACxBF,SAAS,yBACZG,KAAMR,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,gBACtEI,MAAOT,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,IAAK,aAAaC,SAAS,yBACxEK,SAAUV,EAAAA,KAAaK,SAAS,oBAChCM,MAAOX,EAAAA,KAAaY,UAAUT,IAAI,GAAGE,SAAS,mBAC9CQ,SAAUb,EAAAA,KAAaI,IAAI,IAAK,eAI9BU,EAAe,CAEbC,SAAU,GAEVb,KAAM,GACNI,KAAM,GACNE,KAAM,GACNC,MAAO,GAEPO,IAAK,OACLN,SAAU,GACVC,MAAO,EACPE,SAAU,IAGH,SAASI,IAAc,IAADC,EAAAC,EAE7BC,GAAWC,EAAAA,EAAAA,MACVX,GAAWY,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAA2B,QAArBN,EAAe,QAAfC,EAACT,EAASe,aAAK,IAAAN,OAAA,EAAdA,EAAgBO,YAAI,IAAAR,EAAAA,EAAI,KAoBjD,OACES,EAAAA,EAAAA,MAACC,EAAAA,GACC,CACAC,SArBgB,SAACC,GACjBC,QAAQC,IAAI,SAAUF,GAEtB,IAAQ5B,EAA2E4B,EAA3E5B,KAAMa,EAAqEe,EAArEf,SAAUT,EAA2DwB,EAA3DxB,KAAME,EAAqDsB,EAArDtB,KAAMC,EAA+CqB,EAA/CrB,MAAOC,EAAwCoB,EAAxCpB,SAAUM,EAA8Bc,EAA9Bd,IAAKL,EAAyBmB,EAAzBnB,MAAKsB,EAAoBH,EAAlBjB,SAAAA,OAAQ,IAAAoB,EAAG,GAAEA,EACxEC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQlC,GACxBgC,EAASE,OAAO,WAAYrB,GAC5BmB,EAASE,OAAO,OAAQ9B,GACxB4B,EAASE,OAAO,OAAQ5B,GACxB0B,EAASE,OAAO,QAAS3B,GACzByB,EAASE,OAAO,WAAY1B,GAC5BwB,EAASE,OAAO,MAAOpB,GACvBkB,EAASE,OAAO,QAASzB,GACzBuB,EAASE,OAAO,WAAYvB,GAE5BO,GAASiB,EAAAA,EAAAA,IAAUH,GACrB,EAMEI,cAAexB,EACff,iBAAkBA,EAClBwC,iBAAe,EACfC,WAAY,CAAEC,MAAO,QACrBC,WAAY,CAAED,MAAO,OAAQE,MAAO,CAAEC,MAAO,UAAWC,WAAY,gBACpEC,aAAc,CAAEL,MAAO,QAAQM,SAAA,EAG7BpB,EAAAA,EAAAA,MAACqB,EAAAA,GAAU,CACTP,MAAM,gBACNQ,WAAW,UACXC,YAAY,UAAUH,SAAA,EAGxBpB,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,iBAAgBJ,SAAA,EAC3BK,EAAAA,EAAAA,KAAA,SAAOC,GAAG,WAAW7C,KAAK,QAAQN,KAAK,WAAWoD,MAAM,WAAWC,gBAAc,KAClFH,EAAAA,EAAAA,KAAA,SAAOI,IAAI,WAAUT,SAAC,iBAEnBpB,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,iBAAgBJ,SAAA,EAC7BK,EAAAA,EAAAA,KAAA,SAAOC,GAAG,OAAO7C,KAAK,QAAQN,KAAK,WAAWoD,MAAM,UACrDF,EAAAA,EAAAA,KAAA,SAAOI,IAAI,OAAMT,SAAC,aAEjBpB,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,iBAAgBJ,SAAA,EAC3BK,EAAAA,EAAAA,KAAA,SAAOC,GAAG,aAAa7C,KAAK,QAAQN,KAAK,WAAWoD,MAAM,gBAC3DF,EAAAA,EAAAA,KAAA,SAAOI,IAAI,aAAYT,SAAC,mBAEvBpB,EAAAA,EAAAA,MAAA,OAAKwB,MAAM,iBAAgBJ,SAAA,EAC3BK,EAAAA,EAAAA,KAAA,SAAOC,GAAG,gBAAgB7C,KAAK,QAAQN,KAAK,WAAWoD,MAAM,mBAC9DF,EAAAA,EAAAA,KAAA,SAAOI,IAAI,gBAAeT,SAAC,sBAmB1BK,EAAAA,EAAAA,KAAC5D,EAAQ,CAACiE,GAAIlC,EAASmC,QAAQX,SAGzB,gBAMNpB,EAAAA,EAAAA,MAACqB,EAAAA,GAAU,CAACP,MAAM,mBAAmBS,YAAY,UAASH,SAAA,EAGxDK,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTzD,KAAK,QACLuC,MAAM,eACNmB,YAAY,gBACZpD,KAAK,UAKT4C,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPzD,KAAK,OACLuC,MAAM,kBACNjC,KAAK,OACLoD,YAAY,mBAEdR,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTzD,KAAK,OACLuC,MAAM,gBACNmB,YAAY,qBACZpD,KAAK,UAEP4C,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTzD,KAAK,OACLuC,MAAM,OACNmB,YAAY,cACZpD,KAAK,aAIXmB,EAAAA,EAAAA,MAACqB,EAAAA,GAAU,CAACP,MAAM,YAAYS,YAAY,UAASH,SAAA,EAE/CK,EAAAA,EAAAA,KAAA,OAAAL,UACAK,EAAAA,EAAAA,KAAC1D,EAAAA,GAAU,CACTQ,KAAK,MACL+C,WAAW,OACXY,QAAS,CACP,CAAEpB,MAAO,SAAUa,MAAO,UAC1B,CAAEb,MAAO,OAAQa,MAAO,cAK5B3B,EAAAA,EAAAA,MAAA,OAAAoB,SAAA,EACAK,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTzD,KAAK,WACLuC,MAAM,WACNmB,YAAY,mBACZpD,KAAK,UAGL4C,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACXzD,KAAK,QACLuC,MAAM,QACNmB,YAAY,gBACZpD,KAAK,UAEL4C,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACXzD,KAAK,WACLuC,MAAM,WACNmB,YAAY,cACZpD,KAAK,iBASf,CCzMF,OAAgB,cAAgB,kCAAkC,MAAQ,2BCE3D,SAASsD,IACtB,OACEnC,EAAAA,EAAAA,MAAA,OAAKoC,UAAWC,EAAAA,cAAqBjB,SAAA,EACnCK,EAAAA,EAAAA,KAAA,MAAIW,UAAWC,EAAAA,MAAajB,SAAC,aAC7BK,EAAAA,EAAAA,KAACnC,EAAU,MAGjB,C","sources":["components/AddPetForm/AddPetForm.styled.jsx","components/AddPetForm/AddPetForm.jsx","webpack://final-fullstack-team-proj/./src/pages/AddPetPage/AddPetPage.module.css?a97e","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport {\n    // FormikStepper,\n    // FormikStep,\n    // InputField,\n    // CheckBoxField,\n    RadioField,  \n  } from \"formik-stepper\";\nimport { Link } from \"react-router-dom\";\n\nexport const RadioButton = styled(RadioField)`\n\nappearance: none;\n-webkit-appearance: none;\n-moz-appearance: none;\n diplay:inline-block;\n height: 35px; \n padding: 8px 16px 8px 16px;\n border-radius: 40px;\n border: none;\n color: var(--blue-color);\n background-color: var(--grey-color);\n  /* text-align: center; */\n  text-decoration: none;\n  &:checked {\n      background-color:blue;\n      background:  linear-gradient(315deg, #419EF1 0%, #9BD0FF 100%);\n      color: var(--white-color);\n\n`;\n\nexport const BackLink = styled(Link)`\nborder: 1px solid black;\npadding: 5px 10px;\ntext-decoration: none;\nborder-radius: 10px;\ndisplay: flex;\nwidth: 90px;\ncolor: black;\nmargin-bottom: 16px;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover, focus{\n    color:rgb(196, 185, 185);\n}\n\n`;","import {\n    FormikStepper,\n    FormikStep,\n    InputField,\n    RadioField,  \n  } from \"formik-stepper\";\nimport * as Yup from \"yup\";  \nimport { addNotice } from \"redux/notices/operations\";\nimport { useDispatch } from 'react-redux';\nimport { useRef} from 'react';\nimport { useLocation } from 'react-router-dom';\n \n  // import \"formik-stepper/dist/style.css\";\n\n// import { IoArrowBackCircleSharp } from 'react-icons/io5';\nimport \"./AddPetForm.css\";\nimport { BackLink } from \"./AddPetForm.styled\";\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(16, 'Too Long!').required('Enter a name'),\n    // date: Yup.date().required('Required').format('DD-MM-YYYY', true),\n    date: Yup.date().typeError('The value must be a date (DD-MM-YYYY)')\n      .required('Enter a date of birth'),\n    type: Yup.string().min(2, 'Too Short!').max(16, 'Too Long!').required('Enter a type'),\n    title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!').required('Enter a type name pet'),\n    location: Yup.string().required('Enter a location'),\n    price: Yup.number().integer().min(1).required('Enter the price'),\n    comments: Yup.string().max(120, 'Too Long!'),\n   \n  });\n \nconst initialState = {\n// Choose option\n        category: \"\",\n        //Personal details\n        name: \"\",\n        date: \"\",\n        type: \"\",\n        title: \"\",\n        //  More info\n        sex: \"male\",\n        location: \"\",\n        price: 0,\n        comments: \"\",\n}\n\nexport default function AddPetForm() {\n    \n  const dispatch = useDispatch(); \n   const location = useLocation();\n   const backLink = useRef(location.state?.from ?? '/');\n  \n     const onSubmit = (values) => {\n      console.log(\"values\", values);\n      \n      const { name, category, date, type, title, location, sex, price, comments = \"\" } = values;\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"category\", category);\n      formData.append(\"date\", date);\n      formData.append(\"type\", type);\n      formData.append(\"title\", title);\n      formData.append(\"location\", location);\n      formData.append(\"sex\", sex);\n      formData.append(\"price\", price);\n      formData.append(\"comments\", comments);\n      //formData.append(\"image\", file);\n      dispatch(addNotice(formData));\n    };\n  \n  return (\n    <FormikStepper\n      /// Accept all Formik props\n      onSubmit={onSubmit} /// onSubmit Function\n      initialValues={initialState}\n      validationSchema={validationSchema}\n      withStepperLine /// false as default and If it is false, it hides stepper line\n      nextButton={{ label: \"Next\" }}\n      prevButton={{ label: \"Back\", style: { color: \"#54ADFF\", background: \"transparent\"  }  }}  \n      submitButton={{ label: \"Done\"}}\n      >\n        {/*  First Step */}\n        <FormikStep\n          label=\"Choose option\" /// The text label of Step\n          labelColor=\"#00C3AD\" /// css-colors => #fff\n          circleColor=\"#00C3AD\" /// css-colors => #fff\n      >\n\n        <div class=\"form_radio_btn\">\n        <input id=\"your-pet\" type=\"radio\" name=\"category\" value=\"your-pet\" defaultChecked></input>\n\t      <label for=\"your-pet\">your pet</label>\n        </div>\n          <div class=\"form_radio_btn\">\n        <input id=\"sell\" type=\"radio\" name=\"category\" value=\"sell\" ></input>\n\t      <label for=\"sell\">sell</label>\n        </div>\n        <div class=\"form_radio_btn\">\n        <input id=\"lost-found\" type=\"radio\" name=\"category\" value=\"lost-found\"></input>\n\t      <label for=\"lost-found\">lost/found</label>\n        </div>\n        <div class=\"form_radio_btn\">\n        <input id=\"in-good-hands\" type=\"radio\" name=\"category\" value=\"in-good-hands\" ></input>\n\t      <label for=\"in-good-hands\">in good hands</label>\n        </div>\n        \n            {/* <RadioField \n            name=\"category\"\n          labelColor=\"#000\"\n\n          options={[\n              { label: \"your pet\", value: \"your-pet\" },\n              { label: \"sell\", value: \"sell\" },\n              { label: \"lost/found\", value: \"lost-found\" },\n              { label: \"in good hands\", value: \"in-good-hands\" }\n              \n            ]}\n\n          />  */}\n       \n\n        {/* /> */}\n        <BackLink to={backLink.current}>\n        {/* <IoArrowBackCircleSharp\n          style={{ marginRight: 8, width: '20', height: '20' }}\n        /> */}\n        Go back\n      </BackLink>\n\n        </FormikStep>\n        {/* Second Step */}\n        <FormikStep label=\"Personal details\" circleColor=\"#54ADFF\">\n        {/* for category !== your pet */}\n        {/* {false && */}\n          <InputField\n            name=\"title\"\n            label=\"Title of add\"\n            placeholder=\"Type name pet\"\n            type=\"text\"\n          />\n        {/* // } */}\n        \n          {/* for all category */}\n        <InputField\n            name=\"name\"\n            label=\"Pet’s name\"\n            type=\"text\"\n            placeholder=\"Type name pet\" \n          />\n          <InputField\n            name=\"date\"\n            label=\"Date of birth\"\n            placeholder=\"Type date of birth\"\n            type=\"text\"\n          />\n          <InputField\n            name=\"type\"\n            label=\"Type\"\n            placeholder=\"Type of pet\"\n            type=\"text\"\n          />   \n      </FormikStep>\n           {/* Third Step */}\n      <FormikStep label=\"More info\" circleColor=\"#CCE4FB\"> \n          {/* for caterory = your pet */}\n          <div>\n          <RadioField\n            name=\"sex\"\n            labelColor=\"#000\"\n            options={[\n              { label: \"Female\", value: \"female\" },\n              { label: \"Male\", value: \"male\" }              \n            ]}\n            />\n            \n          </div>\n          <div>\n          <InputField\n            name=\"location\"\n            label=\"Location\"\n            placeholder=\"Type of location\"\n            type=\"text\"\n            /> \n             {/* for category !== selll */}\n            <InputField\n            name=\"price\"\n            label=\"Price\"\n            placeholder=\"Type of price\"\n            type=\"text\"\n            />\n            <InputField\n            name=\"comments\"\n            label=\"Comments\"\n            placeholder=\"Type of pet\"\n            type=\"text\"\n            />\n          </div>\n                \n        </FormikStep>\n    \n        \n      </FormikStepper>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"AddPetPage_formContainer__3H5vK\",\"title\":\"AddPetPage_title__Vaz3d\"};","import AddPetForm from 'components/AddPetForm';\nimport styles from './AddPetPage.module.css';\n\nexport default function AddPetPage() {\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.title}>Add pet</h2>\n      <AddPetForm />\n    </div>\n  );\n}\n"],"names":["BackLink","styled","RadioField","_templateObject","_taggedTemplateLiteral","Link","_templateObject2","validationSchema","Yup","shape","name","min","max","required","date","typeError","type","title","location","price","integer","comments","initialState","category","sex","AddPetForm","_location$state$from","_location$state","dispatch","useDispatch","useLocation","backLink","useRef","state","from","_jsxs","FormikStepper","onSubmit","values","console","log","_values$comments","formData","FormData","append","addNotice","initialValues","withStepperLine","nextButton","label","prevButton","style","color","background","submitButton","children","FormikStep","labelColor","circleColor","class","_jsx","id","value","defaultChecked","for","to","current","InputField","placeholder","options","AddPetPage","className","styles"],"sourceRoot":""}