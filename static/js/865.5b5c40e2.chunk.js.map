{"version":3,"file":"static/js/865.5b5c40e2.chunk.js","mappings":"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","sources":["redux/services/selectors.js","hooks/useServices.js","webpack://final-fullstack-team-proj/./src/components/OurFriendsList/OurFriendsList.module.css?6075","components/OurFriendsList/OurFriendsList.jsx","webpack://final-fullstack-team-proj/./src/pages/OurFriendsPage/OurFriendsPage.module.css?86ce","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["export const selectAllServices = state => state.services.services;\n\nexport const selectIsLoading = state => state.services.isLoading;\n","import { useSelector } from 'react-redux';\nimport { selectAllServices, selectIsLoading } from 'redux/services/selectors';\n\nexport default function useServices() {\n  const services = useSelector(selectAllServices);\n  const isLoading = useSelector(selectIsLoading);\n\n  return {\n    services,\n    isLoading,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OurFriendsList_container__Dr4Uq\",\"list\":\"OurFriendsList_list__OaGvD\",\"item\":\"OurFriendsList_item__aGcmE global_shadow__ECSSe\",\"title\":\"OurFriendsList_title__RWG+e\",\"thumb\":\"OurFriendsList_thumb__cMCeb\",\"info\":\"OurFriendsList_info__iatmN\",\"details\":\"OurFriendsList_details__oubaf\",\"image\":\"OurFriendsList_image__q0rYo\",\"dropdownContent\":\"OurFriendsList_dropdownContent__PW5HK\",\"infoTitle\":\"OurFriendsList_infoTitle__hHLPB\",\"infoDetails\":\"OurFriendsList_infoDetails__i4FoV\",\"timeText\":\"OurFriendsList_timeText__iQw9c\",\"active\":\"OurFriendsList_active__yQu8h\",\"scheduleText\":\"OurFriendsList_scheduleText__Sz-i0\"};","import React, { useState } from 'react';\nimport useServices from \"hooks/useServices\";\nimport s from './OurFriendsList.module.css';\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=158x150';\n\nexport default function OurFriendsList() {\n    const { services } = useServices();\n    const [openDropdowns, setOpenDropdowns] = useState({}); \n\n    const toggleDropdown = (service, serviceId) => {\n        if (service.workDays) {\n            return setOpenDropdowns(prevOpenDropdowns => ({\n                ...prevOpenDropdowns,\n                [serviceId]: !prevOpenDropdowns[serviceId] || false\n            }));\n        }\n        return;\n    };\n\n    const getDayOfWeekAbbreviation = (dayIndex) => {\n        const daysOfWeek = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n        return daysOfWeek[dayIndex];\n    };\n\n    return (\n        <section className={s.container}>\n            <ul className={s.list}>\n                {services.map(service => {\n                    const firstWorkDay = service.workDays && service.workDays.find((day => day.isOpen));\n\n                    return (\n                        <li key={service._id} className={s.item}>\n                            <h2 className={s.title}>{service.title}</h2>\n                            <div className={s.info}>\n                                <div className={s.thumb}>\n                                    <a href={service.url} target=\"_blank\" rel=\"noreferrer\">\n                                        <img src={service.imageUrl || defaultImg} alt={service.title} className={s.image} />\n                                    </a>\n                                </div>\n                                <div className={s.details}>\n                                    <button className={s.infoDetails} onClick={() => toggleDropdown(service, service._id)}>\n                                    <p className={`${s.infoTitle} ${openDropdowns[service._id]? s.active : ''}`}>Time:</p>\n                                        {firstWorkDay ? (\n                                            <p className={`${s.timeText} ${openDropdowns[service._id]? s.active : ''}`}>\n                                                {`${firstWorkDay.from} - ${firstWorkDay.to}`}\n                                            </p>\n                                        ) : (\n                                            <p className={s.timeText}>\n                                               day and night\n                                            </p>\n                                        )}\n                                    </button>\n                                    {openDropdowns[service._id] && (\n                                        <div className={s.dropdownContent}>\n                                            {service.workDays && service.workDays.length > 0 ? (\n                                                service.workDays.map((day, index) => (\n                                                    <p key={index} className={s.scheduleText}>\n                                                        {day.from ? `${getDayOfWeekAbbreviation(index)}   ${day.from} - ${day.to}` : `${getDayOfWeekAbbreviation(index)} Closed`}\n                                                    </p>\n                                                ))\n                                            ) : (\n                                                <p>Not specified</p>\n                                            )}\n                                        </div>\n                                    )}\n                                    <p className={s.infoTitle}>Address:</p>\n                                    <p className={s.infoDetails}>{service.address || 'website only'}</p>\n                                    <p className={s.infoTitle}>Email:</p>\n                                    <p className={s.infoDetails} href=\"mailto:\">{service.email || 'phone only'}</p>\n                                    <p className={s.infoTitle}>Phone:</p>\n                                    <a href={`tel:${service.phone || ''}`}>{service.phone || 'email only'}</a>\n                                </div>\n                            </div>\n                        </li>\n                    );\n                })}\n            </ul>\n        </section>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"OurFriendsPage_title__9QCXb\"};","import { useEffect } from \"react\";\nimport { getServices } from \"redux/services/operations\";\nimport Spinner from \"utils/Spinner\"\nimport OurFriendsList from \"components/OurFriendsList\";\nimport useServices from 'hooks/useServices';\nimport { useDispatch } from \"react-redux\";\nimport s from './OurFriendsPage.module.css'\n\nexport default function OurFriendsPage() {\n    const dispatch = useDispatch();\n    const {services, isLoading} = useServices();\n\n    useEffect(() => {\n        dispatch(getServices())\n    }, [dispatch]);\n    \n    return (\n        <>\n            <h1 className={s.title}>Our friends</h1>\n            {isLoading && <Spinner />}\n            {services && <OurFriendsList />}\n        </>\n    );\n}"],"names":["selectAllServices","state","services","selectIsLoading","isLoading","useServices","useSelector","defaultImg","OurFriendsList","_useState","useState","_useState2","_slicedToArray","openDropdowns","setOpenDropdowns","getDayOfWeekAbbreviation","dayIndex","_jsx","className","s","children","map","service","firstWorkDay","workDays","find","day","isOpen","_jsxs","title","href","url","target","rel","src","imageUrl","alt","onClick","serviceId","prevOpenDropdowns","_objectSpread","_defineProperty","toggleDropdown","_id","concat","from","to","length","index","address","email","phone","OurFriendsPage","dispatch","useDispatch","_useServices","useEffect","getServices","_Fragment","Spinner"],"sourceRoot":""}