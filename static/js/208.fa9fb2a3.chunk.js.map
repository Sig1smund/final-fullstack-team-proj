{"version":3,"file":"static/js/208.fa9fb2a3.chunk.js","mappings":"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","sources":["components/AddPetForm/AddPetForm.styled.jsx","components/AddPetForm/AddPetForm.jsx","webpack://final-fullstack-team-proj/./src/pages/AddPetPage/AddPetPage.module.css?a97e","pages/AddPetPage/AddPetPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport {\n    // FormikStepper,\n    // FormikStep,\n    // InputField,\n    // CheckBoxField,\n    RadioField,  \n  } from \"formik-stepper\";\nimport { Link } from \"react-router-dom\";\n\nexport const RadioButton = styled(RadioField)`\n\nappearance: none;\n-webkit-appearance: none;\n-moz-appearance: none;\n diplay:inline-block;\n height: 35px; \n padding: 8px 16px 8px 16px;\n border-radius: 40px;\n border: none;\n color: var(--blue-color);\n background-color: var(--grey-color);\n  /* text-align: center; */\n  text-decoration: none;\n  &:checked {\n      background-color:blue;\n      background:  linear-gradient(315deg, #419EF1 0%, #9BD0FF 100%);\n      color: var(--white-color);\n\n`;\n\n\n\nexport const BackLink = styled(Link)`\nborder: 1px solid black;\npadding: 5px 10px;\ntext-decoration: none;\nborder-radius: 10px;\ndisplay: flex;\nwidth: 90px;\ncolor: black;\nmargin-bottom: 16px;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover, focus{\n    color:rgb(196, 185, 185);\n}\n\n`;","import {\n    FormikStepper,\n    FormikStep,\n    InputField,\n    RadioField,  \n  } from \"formik-stepper\";\nimport * as Yup from \"yup\";  \nimport { addNotice } from \"redux/notices/operations\";\nimport { useDispatch } from 'react-redux';\nimport { useRef, useState} from 'react';\nimport { useLocation } from 'react-router-dom';\n \n  // import \"formik-stepper/dist/style.css\";\n\n// import { IoArrowBackCircleSharp } from 'react-icons/io5';\nimport \"./AddPetForm.css\";\nimport { BackLink } from \"./AddPetForm.styled\";\n// import css from \"./AddPetForm.module.css\";\n\n\n\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(16, 'Too Long!').required('Enter a name'),\n    // date: Yup.date().required('Required').format('DD-MM-YYYY', true),\n    date: Yup.date().typeError('The value must be a date (DD-MM-YYYY)')\n      .required('Enter a date of birth'),\n    type: Yup.string().min(2, 'Too Short!').max(16, 'Too Long!').required('Enter a type'),\n    // title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!').required('Enter a type name pet'),\n    title: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!'),\n    location: Yup.string(),\n    // location: Yup.string().required('Enter a location'),\n    price: Yup.number().integer().min(1),\n    // price: Yup.number().integer().min(1).required('Enter the price'),\n    comments: Yup.string().max(120, 'Too Long!'),\n   \n  });\n \n// const initialState = {\n//   category: \"\",\n//   file: null,\n       \n// };\n\nconst initialValues = {\n  //Personal details\n  category: \"\",\n  name: \"\",\n  date: \"\",\n  type: \"\",\n  title: \"\",\n  //  More info\n  sex: \"male\",\n  location: \"\",\n  price: 0,\n  comments: \"\",\n  // isYourPet: true,\n};\n\nexport default function AddPetForm() {\n  \n    \n  const dispatch = useDispatch(); \n   const location = useLocation();\n   const backLink = useRef(location.state?.from ?? '/');\n  const [state, setState] = useState(initialValues);\n  const [category, setCategory] = useState(\"\");\n  const [imageURL, setImageURL] = useState(\"\");\n  const [imageFile, setFile] = useState(\"\");\n    \n  const onChange = (e) => {\n    const { name, value } = e.target;\n    // const isYourPet = (value === \"your-pet\");\n    console.log(\"e\",e.target);\n    setState(state => ({ ...state, [name]: value }));\n    setCategory(value);\n    \n      console.log(name, value);\n    console.log(\"category\", state.category);\n    console.log(\"dds\", imageURL);\n  }\n  \n  const onChangeFile = event => {\n      const file = event.target.files[0];\n      if (file.size > 1024 * 1024 * 3) {\n        alert(\"Wrong size\")\n        return;\n  }  \n      const newImage = URL.createObjectURL(file);\n      setImageURL(newImage);\n    setFile(file);\n    console.log(\"file\", file);\n     console.log(\"newImage\", newImage);\n   };  \n  \n  const onSubmit = (values) => {\n    console.log(\"values\", values);\n    setState(state =>({...state, ...values}));\n    console.log(\"state\",state);\n      \n      const { name, date, type, title, location, sex, price, comments = \"\" } = values;\n      \n    const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"category\", category);\n      formData.append(\"date\", date);\n      formData.append(\"type\", type);\n      formData.append(\"title\", title);\n      formData.append(\"location\", location);\n      formData.append(\"sex\", sex);\n      formData.append(\"price\", price);\n      formData.append(\"comments\", comments);\n      formData.append(\"image\", imageFile);\n      dispatch(addNotice(formData));\n  };\n  \n  // const { category } = state;\n  // console.log(\"isYourPet\", isYourPet);\n  return (\n    <FormikStepper \n      /// Accept all Formik props\n      onSubmit={onSubmit} /// onSubmit Function\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      withStepperLine /// false as default and If it is false, it hides stepper line\n      nextButton={{ label: \"Next\" }}\n      prevButton={{ label: \"Back\", style: { color: \"#54ADFF\", background: \"transparent\"  }  }}  \n      submitButton={{ label: \"Done\"}}\n      >\n        {/*  First Step */}\n        <FormikStep\n          label=\"Choose option\" /// The text label of Step\n          labelColor=\"#00C3AD\" \n          circleColor=\"#00C3AD\" \n      >\n\n        <div className=\"form_radio_btn\">\n        <input  id=\"your-pet\" type=\"radio\" name=\"category\" value=\"your-pet\" defaultChecked></input>\n\t      <label htmlFor=\"your-pet\">your pet</label>\n        </div>\n          <div className=\"form_radio_btn\">\n        <input id=\"sell\" type=\"radio\" name=\"category\" value=\"sell\" onClick={onChange}></input>\n\t      <label htmlFor=\"sell\">sell</label>\n        </div>\n        <div className=\"form_radio_btn\">\n        <input id=\"lost-found\" type=\"radio\" name=\"category\" value=\"lost-found\" onClick={onChange} ></input>\n\t      <label htmlFor=\"lost-found\">lost/found</label>\n        </div>\n        <div className=\"form_radio_btn\">\n        <input id=\"in-good-hands\" type=\"radio\" name=\"category\" value=\"in-good-hands\" onClick={onChange} ></input>\n\t      <label htmlFor=\"in-good-hands\">in good hands</label>\n        </div>\n           \n        {/* /> */}\n        <BackLink to={backLink.current}>\n        {/* <IoArrowBackCircleSharp\n          style={{ marginRight: 8, width: '20', height: '20' }}\n        /> */}\n        Go back\n      </BackLink>\n\n        </FormikStep>\n        {/* Second Step */}\n        <FormikStep label=\"Personal details\" circleColor=\"#54ADFF\">\n         {!(category === \"your-pet\") &&  <InputField\n            name=\"title\"\n            label=\"Title of add\"\n            placeholder=\"Type name pet\"\n            type=\"text\"\n        />}\n        \n            <InputField\n            name=\"name\"\n            label=\"Pet’s name\"\n            type=\"text\"\n            placeholder=\"Type name pet\" \n          />\n          <InputField\n            name=\"date\"\n            label=\"Date of birth\"\n            placeholder=\"Type date of birth\"\n            type=\"text\"\n          />\n          <InputField\n            name=\"type\"\n            label=\"Type\"\n            placeholder=\"Type of pet\"\n            type=\"text\"\n          />   \n      </FormikStep>\n           {/* Third Step */}\n      <FormikStep label=\"More info\" circleColor=\"#CCE4FB\"> \n        <input\n          type=\"file\"\n          // name=\"file\"\n          accept='image/*, .png, .jpg, .gif, .web'\n              // ref={inputPhotoRef}\n\n                onChange={onChangeFile}\n             \n            //  style={{ display: 'none' }}\n            />\n\n          {/* for caterory = your pet */}\n        {!(category === \"your-pet\") && (\n          <>\n            <RadioField\n            name=\"sex\"\n            labelColor=\"#000\"\n            options={[\n              { label: \"Female\", value: \"female\" },\n              { label: \"Male\", value: \"male\" }              \n            ]}\n            />\n          <InputField\n            name=\"location\"\n            label=\"Location\"\n            placeholder=\"Type of location\"\n            type=\"text\"\n            /> \n          <InputField\n            name=\"price\"\n            label=\"Price\"\n            placeholder=\"Type of price\"\n            type=\"text\"\n            />\n          \n          </>\n         \n\n          )}\n           <InputField\n            name=\"comments\"\n            label=\"Comments\"\n            placeholder=\"Type of pet\"\n            type=\"text\"\n            />\n          \n        \n        \n                \n        </FormikStep>\n    \n        \n      </FormikStepper>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"AddPetPage_formContainer__3H5vK\",\"title\":\"AddPetPage_title__Vaz3d\"};","import AddPetForm from 'components/AddPetForm';\nimport styles from './AddPetPage.module.css';\n\nexport default function AddPetPage() {\n  return (\n    <div className={styles.formContainer}>\n      <h2 className={styles.title}>Add pet</h2>\n      <AddPetForm />\n    </div>\n  );\n}\n"],"names":["BackLink","styled","RadioField","_templateObject","_taggedTemplateLiteral","Link","_templateObject2","validationSchema","Yup","shape","name","min","max","required","date","typeError","type","title","location","price","integer","comments","initialValues","category","sex","AddPetForm","_location$state$from","_location$state","dispatch","useDispatch","useLocation","backLink","useRef","state","from","_useState","useState","_useState2","_slicedToArray","setState","_useState3","_useState4","setCategory","_useState5","_useState6","imageURL","setImageURL","_useState7","_useState8","imageFile","setFile","onChange","e","_e$target","target","value","console","log","_objectSpread","_defineProperty","_jsxs","FormikStepper","onSubmit","values","_values$comments","formData","FormData","append","addNotice","withStepperLine","nextButton","label","prevButton","style","color","background","submitButton","children","FormikStep","labelColor","circleColor","className","_jsx","id","defaultChecked","htmlFor","onClick","to","current","InputField","placeholder","accept","event","file","files","size","alert","newImage","URL","createObjectURL","_Fragment","options","AddPetPage","styles"],"sourceRoot":""}